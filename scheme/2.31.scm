(define (new-square-tree-2 tree)
  (map (lambda (sub-tree)
         (cond((pair? sub-tree)
               (new-square-tree-2 sub-tree))
              ((not (null? sub-tree))
               (square sub-tree))))
       tree))
              
(define (square-tree-3 tree)
  (define (tree-map f tree)
    (map (lambda (sub-tree)
           (cond((and (not (null? sub-tree))
                      (pair? sub-tree))
                 (square-tree-3 sub-tree))
                (else (f sub-tree))))
         tree))
  (tree-map (lambda (x) (* x x)) tree))